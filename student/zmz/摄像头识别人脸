import numpy as np
import cv2

cap=cv2.VideoCapture(0)
while(1):
    ret,frame=cap.read() # 获取每一帧
    

    face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
    eye_cascade = cv2.CascadeClassifier('haarcascade_eye.xml')
    #img = cv2.imread(frame)
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    faces = face_cascade.detectMultiScale(gray, 1.3, 5)
    for (x,y,w,h) in faces:
        img = cv2.rectangle(frame,(x,y),(x+w,y+h),(255,0,0),2)
        roi_gray = gray[y:y+h, x:x+w]
        roi_color = frame[y:y+h, x:x+w]
        eyes = eye_cascade.detectMultiScale(roi_gray)
        for (ex,ey,ew,eh) in eyes:
            cv2.rectangle(roi_color,(ex,ey),(ex+ew,ey+eh),(0,255,0),2)
            cv2.rectangle(roi_color,(ex-ew,ey),(ex,ey+eh),(0,255,0),2)
            cv2.rectangle(roi_color,(ex+ew,ey),(ex+ew*2,ey+eh),(0,255,0),2)
            cv2.rectangle(roi_color,(ex+ew,ey+eh),(ex+ew*2,ey+eh*2),(0,255,0),2)
            cv2.rectangle(roi_color,(ex-ew,ey+eh),(ex,ey+eh*2),(0,255,0),2)
            cv2.rectangle(roi_color,(ex,ey+eh),(ex+ew,ey+eh*2),(0,255,0),2)
            cv2.rectangle(roi_color,(ex-ew,ey-eh),(ex,ey),(0,255,0),2)
            cv2.rectangle(roi_color,(ex,ey-eh),(ex+ew,ey),(0,255,0),2)
            cv2.rectangle(roi_color,(ex+ew,ey-eh),(ex+ew*2,ey),(0,255,0),2)

    cv2.imshow('frame',frame)
    k=cv2.waitKey(5)&0xFF
    if k==20:
        break

cv2.destroyAllWindows()

